package main

import (
	"database/sql"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"strings"

	_ "github.com/go-sql-driver/mysql"
)

func dbConn() (db *sql.DB) {
	dbDriver := "mysql"
	dbUser := "root"   // 修改为您的MySQL用户名
	dbPass := "maomao" // 修改为您的MySQL密码
	dbName := "game_db"
	db, err := sql.Open(dbDriver, dbUser+":"+dbPass+"@/"+dbName)
	if err != nil {
		log.Fatal(err)
	}
	return db
}

func handler(w http.ResponseWriter, r *http.Request) {
	db := dbConn()
	defer db.Close()

	// 查询时按score列降序排列
	rows, err := db.Query("SELECT username, password, score FROM users ORDER BY score DESC")
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
	defer rows.Close()

	var tableRows string
	for rows.Next() {
		var username, password string
		var score int
		err = rows.Scan(&username, &password, &score)
		if err != nil {
			http.Error(w, err.Error(), http.StatusInternalServerError)
			return
		}
		tableRows += fmt.Sprintf("<tr><td>%s</td><td>%s</td><td>%d</td></tr>", username, password, score)
	}

	if err = rows.Err(); err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}

	// 读取模板文件
	template, err := ioutil.ReadFile("template.html")
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}

	// 替换占位符
	pageContent := strings.Replace(string(template), "{{TABLE_ROWS}}", tableRows, -1)

	w.Header().Set("Content-Type", "text/html")
	fmt.Fprintf(w, pageContent)
}

func main() {
	http.HandleFunc("/", handler)
	log.Println("Server started on: http://localhost:8081")
	err := http.ListenAndServe(":8081", nil)
	if err != nil {
		log.Fatal(err)
	}
}




<!DOCTYPE html>
<html>
<head>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Pacifico&display=swap');

        body {
            font-family: Arial, sans-serif;
            background: linear-gradient(to right, #ff9a9e, #fad0c4);
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
            box-sizing: border-box;
            position: relative;
            overflow: hidden;
        }
        .header {
            width: 100%;
            background-color: rgba(255, 255, 255, 0.8);
            color: black;
            text-align: center;
            padding: 20px;
            font-size: 3em;
            font-family: 'Pacifico', cursive;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            position: fixed;
            top: 0;
            z-index: 1000;
            animation: slideDown 1s ease-out;
        }
        @keyframes slideDown {
            from {
                transform: translateY(-100%);
            }
            to {
                transform: translateY(0);
            }
        }
        .container {
            width: 100%;
            max-width: 1200px;
            background-color: rgba(255, 255, 255, 0.9);
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            padding: 20px;
            box-sizing: border-box;
            margin-top: 180px; /* Increased margin-top for more space */
            animation: fadeIn 1.5s ease-in;
            position: relative;
            z-index: 10;
        }
        @keyframes fadeIn {
            from {
                opacity: 0;
            }
            to {
                opacity: 1;
            }
        }
        table {
            width: 100%;
            border-collapse: collapse;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #4CAF50;
            color: white;
            animation: changeColor 5s infinite;
        }
        @keyframes changeColor {
            0%, 100% {
                background-color: #4CAF50;
            }
            50% {
                background-color: #45a049;
            }
        }
        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
        tr:hover {
            background-color: #ddd;
            cursor: pointer;
            transition: background-color 0.3s;
        }
    </style>
</head>
<body>
    <div class="header">OOXX</div>
    <div class="container">
        <table>
            <tr><th>Username</th><th>Password</th><th>Score</th></tr>
            {{TABLE_ROWS}}
        </table>
    </div>
</body>
</html>
